{
  "version": 3,
  "sources": [
    "src\\index.coffee"
  ],
  "names": [],
  "mappings": ";;;;;;kBAAe,UAAA,IAAA,EAAA,GAAA,EAAA;AACb,MAAA,CAAA,EAAA,MAAA,EAAA,MAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,IAAA;AAAA,MAA0B,IAAA,MAAA,GAAc,KAAxC,IAAA,EAAA;AAAA,UAAM,MAAN,UAAM,CAAN;;AACA,SAAO,IAAI,MAAX;AACA,WAAS,EAAT;AACA,WAAS,GAAT;AAEA,OAAA,IAAA,IAAA,CAAA,EAAA,MAAA,IAAA,MAAA,EAAA,IAAA,GAAA,EAAA,IAAA,EAAA,CAAA,EAAA;;AACE,WAAA,CAAA,IAAY,CAAZ;AADF;SAGA;AAAA,WAAO,eAAA,IAAA,EAAA;AACL,UAAA,IAAA,EAAA,MAAA,EAAA,CAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GAAA;AAAA,YAAM,EAAN;AACA,aAAO,CAAP;AACA,eAAS,CAAT;AAEA,aAAO,CAAP;AACA,cAAQ,KAAK,IAAb;AACA,aAAO,QAAQ,CAAf;AACA,WAAA,IAAA,KAAA,MAAA,GAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,CAAA,EAAA;;AACE,YAAI,OAAO,CAAP,CAAJ;AACA,YAAO,KAAP,IAAA,EAAA;AACE,kBAAA,KAAA,sBAAA,CAAA;AACA,iBAFF,IAEE;;AAEF,kBAAU,IAAI,IAAd;AACA,gBAAQ,IAAR;AAEA,eAAM,QAAN,KAAA,EAAA;AACE,gBAAM,CAAC,SAAD,IAAA,EAAA,QAAA,CAAA,EAAA,IAA+B,GAArC;AACA,qBAAW,IAAX;AACA,mBAAS,IAAT;AAHF;AATF;aAaA,G;AArBF,KAAA;AAuBA,cAAU,kBAAA,IAAA,EAAA,MAAA,EAAA;AACR,UAAA,IAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA;AAAA,aAAO,CAAC,KAAD,IAAA,IAAc,CAArB;AAEA,YAAM,EAAN;AACA,WAAa,QAAA,IAAA,MAAA,OAAA,CAAA,EAAA,OAAA,CAAA,IAAb,EAAa,SAAA,CAAA,KAAA,OAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,CAAb,EAAa,QAAA,KAAb,IAAA,EAAA;AACE,YAAI,QAAQ,IAAZ;AAEA,gBAAA,KAAA;AAAA,eAAA,EACO,IAAI,KADX,IAAA,CAAA;AAEI,mBAAO,CAAP;;;AAFJ,eAAA,EAIO,IAJP,CAAA,CAAA;AAKI,mBAAO,CAAC,SAAU,QAAX,CAAA,KAA4B,CAAnC;;;AALJ,eAOO,MAPP,CAAA;AAQI,mBAAO,SAAS,IAAhB;AADG;;AAPP,eAAA,EAUO,IAVP,CAAA,CAAA;AAWI,mBAAO,CAAC,SAAU,QAAQ,CAAnB,CAAA,KAA2B,CAAC,CAAnC;AAXJ;;AAcA,eAAO,OAAO,IAAP,CAAP;AAjBF;aAkBA,G;AAtBQ;AAvBV,G;AATa,C;;AAAA,C",
  "sourcesContent": [
    "export default (bits, abc)->\n  throw Error \"記号が足りません\" if abc.length < (1 << bits)\n  size = abc.length\n  decode = {}\n  encode = abc\n\n  for c, n in abc\n    decode[c] = n\n\n  toHex: (code)->\n    str = \"\"\n    base = 1\n    buffer = 0\n\n    bits = 4\n    limit = 1 << bits\n    mask = limit - 1\n    for c in code by -1\n      n = decode[c]\n      unless n?\n        console.error \"decode error on #{c}\"\n        return null\n\n      buffer += n * base\n      base *= size\n\n      while base >= limit\n        str = (buffer & mask).toString(16) + str\n        buffer >>= bits\n        base >>= bits\n    str\n\n  byNumber: (size, buffer)->\n    mask = (1 << bits) - 1\n\n    str = \"\"\n    for index in [size * 8 .. 0] by -bits\n      n = index - bits\n\n      switch\n        when n > 31 - bits\n          code = 0\n#          console.warn [n]\n        when n > 0\n          code = (buffer & (mask <<  n)) >>  n\n#          console.warn [n, [ buffer, (mask << n), code].map (it)-> it.toString(2)]\n        when n == 0\n          code = buffer & mask\n#          console.warn [n, [ buffer, mask, code].map (it)-> it.toString(2)]\n        when 0 > n\n          code = (buffer & (mask >> -n)) << -n\n#          console.warn [n, [ buffer, (mask >> -n), code].map (it)-> it.toString(2)]\n\n      str += encode[code]\n    str\n"
  ],
  "sourceRoot": ""
}